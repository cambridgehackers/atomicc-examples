STRUCT NOCDataH  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    FIELD Bit(16) length
    FIELD Bit(128) data
}
INTERFACE BscanIfc(width=32)  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_bscan_OC_h
    INTERFACE PipeIn_OC_2 toBscan
    INTERFACE/Ptr PipeIn_OC_3 fromBscan
}
INTERFACE BtestIfc  {
    FILE bscant_OC_cpp
    SOFTWARE request
    SOFTWARE indication
    INTERFACE BtestRequest request
    INTERFACE/Ptr BtestIndication indication
}
INTERFACE BtestIndication  {
    FILE bscant_OC_cpp
    METHOD/Action heard__ENA ( Bit(32) v )
}
INTERFACE BtestRequest  {
    FILE bscant_OC_cpp
    METHOD/Action say__ENA ( Bit(32) v )
}
INTERFACE FunnelBaseIfc(funnelWidth=99,width=32)  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    INTERFACE/Count funnelWidth  PipeIn_OC_0 in
    INTERFACE/Ptr PipeIn_OC_1 out
}
INTERFACE PipeIn  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    METHOD/Action enq__ENA ( NOCDataH v )
}
INTERFACE PipeIn_OC_0  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(32) v )
}
INTERFACE PipeIn_OC_1  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(32) v )
}
INTERFACE PipeIn_OC_2  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(32) v )
}
INTERFACE PipeIn_OC_3  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(32) v )
}
INTERFACE l_topIfc  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    INTERFACE PipeIn request
    INTERFACE/Ptr PipeIn indication
}
EMODULE Bscan(id=4,width=32) BscanIfc(width=32) {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_bscan_OC_h
}
EMODULE FunnelBufferedBase(funnelWidth=99,width=32) FunnelBaseIfc(funnelWidth=99,width=32) {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
}
EMODULE l_top l_topIfc {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
}
MODULE Btest BtestIfc {
    FILE bscant_OC_cpp
    INTERFACECONNECT readUser bscan$fromBscan PipeIn_OC_3
    FIELD Bscan(id=4,width=32) bscan
    INTERFACE PipeIn_OC_3 readUser
    FIELD Bit(8) readCount
    FIELD Bit(8) writeCount
    FIELD Bit(32) nextV
    FIELD Bit(1) ready
    METHOD/Action readUser$enq__ENA ( Bit(64) v ) {
        CALL/Action :indication$heard__ENA{readUser$enq$v}
        STORE :readCount = (readCount) + (1)
    }
    METHOD/Action request$say__ENA ( Bit(32) v ) {
        STORE :nextV = request$say$v
        STORE :ready = 1
    }
    METHOD/Rule/Action RULE$copyRule__ENA {
        CALL/Action :bscan$toBscan$enq__ENA{nextV}
        STORE :ready = 0
        STORE :writeCount = (writeCount) + (1)
    }
}
