MODULE l_ainterface_OC_IVectorRequest = 13 (
    METHOD Action say__ENA  (
        PARAM say$v [703:0]
    )
    METHOD say__RDY 
)
MODULE l_ainterface_OC_IndIF = 15 (
    METHOD Action heard__ENA  (
        PARAM heard$v [703:0]
    )
    METHOD heard__RDY 
)
MODULE l_ainterface_OC_PipeIn = 5 (
    METHOD Action enq__ENA  (
        PARAM enq$v [31:0]
    )
    METHOD enq__RDY 
)
MODULE l_ainterface_OC_PipeIn_OC_1 = 9 (
    METHOD Action enq__ENA  (
        PARAM enq$v [703:0]
    )
    METHOD enq__RDY 
)
MODULE l_ainterface_OC_PipeOut = 6 (
    METHOD Action deq__ENA 
    METHOD deq__RDY 
    METHOD first RANGE [31:0]
    METHOD first__RDY 
)
MODULE l_ainterface_OC_PipeOut_OC_2 = 10 (
    METHOD Action deq__ENA 
    METHOD deq__RDY 
    METHOD first RANGE [703:0]
    METHOD first__RDY 
)
MODULE l_module_OC_Fifo_OC_0 = 8 (
    FIELD 9:in  FORMAT 
    FIELD 10:out  FORMAT 
    METHOD Action in$enq__ENA  (
        PARAM in$enq$v [703:0]
    )
    METHOD in$enq__RDY 
    METHOD Action out$deq__ENA 
    METHOD out$deq__RDY 
    METHOD out$first RANGE [703:0]
    METHOD out$first__RDY 
)
MODULE l_struct_OC_ValuePair = 12 (
    FIELD a  FORMAT reg[31:0] @
    FIELD b  FORMAT reg[31:0] @
    FIELD c  FORMAT reg[31:0] @[20]
)
MODULE l_module_OC_Fifo1_OC_3 = 11 (
    FIELD 12:element  RANGE [703:0] FORMAT 
    FIELD full  FORMAT reg @
    METHOD Action in$enq__ENA  (
        PARAM in$enq$v [703:0]
        STORE :element = in$enq$v
        STORE :full = 1
    )
    METHOD in$enq__RDY  = (full ^ 1) (
        METAREAD full 
    )
    METHOD Action out$deq__ENA  (
        STORE :full = 0
    )
    METHOD out$deq__RDY  = (full) (
        METAREAD full 
    )
    METHOD out$first RANGE [703:0] = (element) (
        METAREAD element 
    )
    METHOD out$first__RDY  = (full) (
        METAREAD full 
    )
)
MODULE l_module_OC_FifoPong = 7 (
    FIELD 11:element1  RANGE [711:0] FORMAT 
    FIELD 11:element2  RANGE [711:0] FORMAT 
    FIELD pong  FORMAT reg @
    METHOD Action in$enq__ENA  (
        PARAM in$enq$v [703:0]
        CALL Action pong:element2$in$enq__ENA{element2$in$enq$v;in$enq$v}
        CALL Action pong ^ 1:element1$in$enq__ENA{element1$in$enq$v;in$enq$v}
        METAREAD pong 
        METAREAD pong pong
        METAREAD pong pong ^ 1
        METAINVOKE element1$in$enq__ENA pong ^ 1
        METAINVOKE element2$in$enq__ENA pong
    )
    METHOD in$enq__RDY  = ((element2$in$enq__RDY | (pong ^ 1)) & (element1$in$enq__RDY | pong)) (
        METAREAD pong 
        METAINVOKE element1$in$enq__RDY 
        METAINVOKE element2$in$enq__RDY 
    )
    METHOD Action out$deq__ENA  (
        STORE :pong = pong ^ 1
        CALL Action pong:element2$out$deq__ENA{}
        CALL Action pong ^ 1:element1$out$deq__ENA{}
        METAREAD pong 
        METAINVOKE element1$out$deq__ENA pong ^ 1
        METAINVOKE element2$out$deq__ENA pong
    )
    METHOD out$deq__RDY  = ((element2$out$deq__RDY | (pong ^ 1)) & (element1$out$deq__RDY | pong)) (
        METAREAD pong 
        METAINVOKE element1$out$deq__RDY 
        METAINVOKE element2$out$deq__RDY 
    )
    METHOD out$first RANGE [703:0] = (retval) (
        STORE Alloca pong:retval = element2$out$first{}
        STORE Alloca pong ^ 1:retval = element1$out$first{}
        METAREAD pong 
        METAREAD pong pong
        METAREAD pong pong ^ 1
        METAINVOKE element1$out$first pong ^ 1
        METAINVOKE element2$out$first pong
    )
    METHOD out$first__RDY  = ((element2$out$first__RDY | (pong ^ 1)) & (element1$out$first__RDY | pong)) (
        METAREAD pong 
        METAINVOKE element1$out$first__RDY 
        METAINVOKE element2$out$first__RDY 
    )
)
MODULE l_module_OC_IVector = 1 (
    RULE respond
    FIELD 13:request  FORMAT 
    FIELD 7:fifo  RANGE [1431:0] FORMAT 
    FIELD 14:ind PTR  FORMAT 
    METHOD Action request$say__ENA  (
        PARAM request$say$v [703:0]
        CALL Action :fifo$in$enq__ENA{fifo$in$enq$v;request$say$v}
        METAINVOKE fifo$in$enq__ENA 
    )
    METHOD request$say__RDY  = (fifo$in$enq__RDY) (
        METAINVOKE fifo$in$enq__RDY 
    )
    METHOD Action respond__ENA  (
        STORE Alloca :agg_2e_tmp = fifo$out$first{}
        CALL Action :fifo$out$deq__ENA{}
        CALL Action :ind$ind$heard__ENA{ind$ind$heard$v;agg_2e_tmp}
        METAINVOKE fifo$out$deq__ENA 
        METAINVOKE fifo$out$first 
        METAINVOKE ind$ind$heard__ENA 
    )
    METHOD respond__RDY  = ((fifo$out$deq__RDY & fifo$out$first__RDY) & ind$ind$heard__RDY) (
        METAINVOKE fifo$out$deq__RDY 
        METAINVOKE fifo$out$first__RDY 
        METAINVOKE ind$ind$heard__RDY 
    )
)
MODULE l_class_OC_IVectorTest = 2 (
    FIELD 1:ivector  FORMAT 
)
MODULE l_module_OC_Fifo = 4 (
    FIELD 5:in  FORMAT 
    FIELD 6:out  FORMAT 
    METHOD Action in$enq__ENA  (
        PARAM in$enq$v [31:0]
    )
    METHOD in$enq__RDY 
    METHOD Action out$deq__ENA 
    METHOD out$deq__RDY 
    METHOD out$first RANGE [31:0]
    METHOD out$first__RDY 
)
MODULE l_module_OC_Fifo1 = 3 (
    FIELD element  FORMAT reg[31:0] @
    FIELD full  FORMAT reg @
    METHOD Action in$enq__ENA  (
        PARAM in$enq$v [31:0]
        STORE :element = in$enq$v
        STORE :full = 1
    )
    METHOD in$enq__RDY  = (full ^ 1) (
        METAREAD full 
    )
    METHOD Action out$deq__ENA  (
        STORE :full = 0
    )
    METHOD out$deq__RDY  = (full) (
        METAREAD full 
    )
    METHOD out$first RANGE [31:0] = (element) (
        METAREAD element 
    )
    METHOD out$first__RDY  = (full) (
        METAREAD full 
    )
)
MODULE l_module_OC_IVectorIndication = 14 (
    FIELD 15:ind  FORMAT 
    METHOD Action ind$heard__ENA  (
        PARAM ind$heard$v [703:0]
        STORE Alloca :v_2e_addr = ind$heard$v
    )
    METHOD ind$heard__RDY  = (1)
)
