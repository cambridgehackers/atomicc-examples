INTERFACE LpmMem {
    METHOD/Action req__ENA ( Bit(32) v )
    METHOD/Action resAccept__ENA
    METHOD resValue Bit(32)
}
INTERFACE TickIfc {
    METHOD/Action allocateTicket__ENA
    METHOD getTicket Bit(4)
}
EMODULE BufTicket {
    INTERFACE TickIfc tickIfc
}
EMODULE LpmMemory {
    INTERFACE LpmMem ifc
}
MODULE LpmMemory {
    INTERFACE LpmMem ifc
    FIELD Bit(32) delayCount
    FIELD Bit(32) saved
    METHOD/Rule/Action RULE$memdelay_rule__ENA if (((delayCount) > (1))) {
        STORE :delayCount = (delayCount) - (1)
    }
    METHOD/Action ifc$req__ENA ( Bit(32) v ) if (((delayCount) == (0))) {
        STORE :delayCount = 4
        STORE :saved = ifc$req$v
    }
    METHOD/Action ifc$resAccept__ENA if (((delayCount) == (1))) {
        STORE :delayCount = 0
    }
    METHOD ifc$resValue Bit(32) = ((saved)) if (((delayCount) == (1)))
}
