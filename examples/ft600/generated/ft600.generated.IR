STRUCT NOCDataH  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    FIELD Bit(16) length
    FIELD Bit(128) data
}
INTERFACE Ft600  {
    FILE ft600_OC_cpp
    FIELD/input Bit(1) usb_clk
    FIELD/input Bit(1) usb_rxf
    FIELD/input Bit(1) usb_txe
    FIELD/output Bit(1) usb_rd_n
    FIELD/output Bit(1) usb_wr_n
    FIELD/output Bit(1) usb_oe_n
    FIELD/inout Bit(16) usb_ad
}
INTERFACE IobufVecPins(iovecWidth=16)  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_iobufVec_OC_h
    FIELD/inout Bit(16) IO
    FIELD/input Bit(16) I
    FIELD/output Bit(16) O
    FIELD/input Bit(1) T
}
INTERFACE PipeIn(width=32)  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(width) v )
}
EMODULE Dummy PipeIn(width=32) {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
}
EMODULE IobufVec(iovecWidth=16) IobufVecPins(iovecWidth=16) {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_iobufVec_OC_h
}
MODULE ModFt600 Ft600 {
    FILE ft600_OC_cpp
    FIELD Bit(1) usb_fifo_empty
    FIELD Bit(2) usb_rxf_delay
    FIELD Bit(1) usb_txe_delay
    FIELD IobufVec(iovecWidth=16) iov
    METHOD/Rule/Action RULE$handshake__ENA {
        LET Bit(1) :usb_rd_n = (usb_rxf_delay) != (0)
        LET Bit(1) :usb_oe_n = (usb_rxf_delay) & (1)
        LET Bit(1) :usb_wr_n = ((usb_txe_delay) | (usb_fifo_empty)) | (((usb_rxf_delay) & (1)) ^ (-1))
        STORE :usb_fifo_empty = 0
        STORE :usb_rxf_delay = ((usb_rxf_delay) << (1)) | (usb_rxf)
        STORE :usb_txe_delay = usb_txe
        LET Bit(16) :usb_ad = iov$IO
        LET Bit(1) :iov$T = usb_oe_n
    }
}
