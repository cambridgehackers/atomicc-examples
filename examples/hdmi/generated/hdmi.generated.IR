STRUCT NOCDataH  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    FIELD Bit(16) length
    FIELD Bit(128) data
}
INTERFACE ClockImageonIfc  {
    FILE hdmi_OC_cpp
    FIELD/input Bit(1) CLK
    FIELD/input Bit(1) nRST
    FIELD/output Bit(1) hdmiClock
    FIELD/output Bit(1) imageonClock
}
INTERFACE EchoIfc  {
    FILE hdmi_OC_cpp
    SOFTWARE request
    SOFTWARE indication
    INTERFACE EchoRequest request
    INTERFACE/Ptr EchoIndication indication
    FIELD/input Bit(1) CLK
    FIELD/input Bit(1) nRST
    FIELD/input Bit(1) fmc_video_clk1_v
    FIELD/output Bit(1) i2c_mux_reset_n
    FIELD/output Bit(1) adv7511_clk
    FIELD/output Bit(36) adv7511_d
    FIELD/output Bit(1) adv7511_de
    FIELD/output Bit(1) adv7511_hs
    FIELD/output Bit(1) adv7511_vs
}
INTERFACE EchoIndication  {
    FILE hdmi_OC_cpp
    METHOD/Action heard__ENA ( Bit(32) v )
    METHOD/Action heard2__ENA ( Bit(16) a , Bit(16) b )
    METHOD/Action heard3__ENA ( Bit(16) a , Bit(32) b , Bit(32) c , Bit(16) d )
}
INTERFACE EchoRequest  {
    FILE hdmi_OC_cpp
    METHOD/Action say__ENA ( Bit(32) v )
    METHOD/Action muxreset__ENA ( Bit(1) v )
    METHOD/Action say2__ENA ( Bit(16) a , Bit(16) b )
    METHOD/Action setLeds__ENA ( Bit(8) v )
}
INTERFACE HdmiBlockIfc  {
    FILE hdmi_OC_cpp
    FIELD/input Bit(1) CLK
    FIELD/input Bit(1) nRST
    FIELD/output Bit(1) adv7511_clk
    FIELD/output Bit(36) adv7511_d
    FIELD/output Bit(1) adv7511_de
    FIELD/output Bit(1) adv7511_hs
    FIELD/output Bit(1) adv7511_vs
}
INTERFACE MResetInverterResetInverter  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_VResetInverter_OC_h
    FIELD/input Bit(1) RESET_IN
    FIELD/output Bit(1) RESET_OUT
}
INTERFACE MbufgBUFG  {
    FILE _OC__OC__PC__OC__OC__PC_xilinx_PC_VBUFG_OC_h
    FIELD/input Bit(1) I
    FIELD/output Bit(1) O
}
INTERFACE Mmcme2MMCME2_ADV  {
    FILE _OC__OC__PC__OC__OC__PC_xilinx_PC_VMMCME2_PF_ADV_OC_h
    FIELD/Ptr/parameter Bit(8) BANDWIDTH
    FIELD/input Bit(1) CLKFBIN
    FIELD/output Bit(1) CLKFBOUT
    FIELD/output Bit(1) CLKFBOUTB
    FIELD/parameter FLOAT CLKFBOUT_MULT_F
    FIELD/parameter FLOAT CLKFBOUT_PHASE
    FIELD/Ptr/parameter Bit(8) CLKFBOUT_USE_FINE_PS
    FIELD/output Bit(1) CLKFBSTOPPED
    FIELD/input Bit(1) CLKIN1
    FIELD/parameter FLOAT CLKIN1_PERIOD
    FIELD/input Bit(1) CLKIN2
    FIELD/parameter FLOAT CLKIN2_PERIOD
    FIELD/input Bit(1) CLKINSEL
    FIELD/output Bit(1) CLKINSTOPPED
    FIELD/output Bit(1) CLKOUT0
    FIELD/output Bit(1) CLKOUT0B
    FIELD/parameter FLOAT CLKOUT0_DIVIDE_F
    FIELD/parameter FLOAT CLKOUT0_DUTY_CYCLE
    FIELD/parameter FLOAT CLKOUT0_PHASE
    FIELD/Ptr/parameter Bit(8) CLKOUT0_USE_FINE_PS
    FIELD/output Bit(1) CLKOUT1
    FIELD/output Bit(1) CLKOUT1B
    FIELD/parameter Bit(32) CLKOUT1_DIVIDE
    FIELD/parameter FLOAT CLKOUT1_DUTY_CYCLE
    FIELD/parameter FLOAT CLKOUT1_PHASE
    FIELD/Ptr/parameter Bit(8) CLKOUT1_USE_FINE_PS
    FIELD/output Bit(1) CLKOUT2
    FIELD/output Bit(1) CLKOUT2B
    FIELD/parameter Bit(32) CLKOUT2_DIVIDE
    FIELD/parameter FLOAT CLKOUT2_DUTY_CYCLE
    FIELD/parameter FLOAT CLKOUT2_PHASE
    FIELD/Ptr/parameter Bit(8) CLKOUT2_USE_FINE_PS
    FIELD/output Bit(1) CLKOUT3
    FIELD/output Bit(1) CLKOUT3B
    FIELD/parameter Bit(32) CLKOUT3_DIVIDE
    FIELD/parameter FLOAT CLKOUT3_DUTY_CYCLE
    FIELD/parameter FLOAT CLKOUT3_PHASE
    FIELD/Ptr/parameter Bit(8) CLKOUT3_USE_FINE_PS
    FIELD/output Bit(1) CLKOUT4
    FIELD/Ptr/parameter Bit(8) CLKOUT4_CASCADE
    FIELD/parameter Bit(32) CLKOUT4_DIVIDE
    FIELD/parameter FLOAT CLKOUT4_DUTY_CYCLE
    FIELD/parameter FLOAT CLKOUT4_PHASE
    FIELD/Ptr/parameter Bit(8) CLKOUT4_USE_FINE_PS
    FIELD/output Bit(1) CLKOUT5
    FIELD/parameter Bit(32) CLKOUT5_DIVIDE
    FIELD/parameter FLOAT CLKOUT5_DUTY_CYCLE
    FIELD/parameter FLOAT CLKOUT5_PHASE
    FIELD/Ptr/parameter Bit(8) CLKOUT5_USE_FINE_PS
    FIELD/output Bit(1) CLKOUT6
    FIELD/parameter Bit(32) CLKOUT6_DIVIDE
    FIELD/parameter FLOAT CLKOUT6_DUTY_CYCLE
    FIELD/parameter FLOAT CLKOUT6_PHASE
    FIELD/Ptr/parameter Bit(8) CLKOUT6_USE_FINE_PS
    FIELD/Ptr/parameter Bit(8) COMPENSATION
    FIELD/input Bit(7) DADDR
    FIELD/input Bit(1) DCLK
    FIELD/input Bit(1) DEN
    FIELD/input Bit(16) DI
    FIELD/parameter Bit(32) DIVCLK_DIVIDE
    FIELD/output Bit(16) DO
    FIELD/output Bit(1) DRDY
    FIELD/input Bit(1) DWE
    FIELD/parameter Bit(32) IS_CLKINSEL_INVERTED
    FIELD/parameter Bit(32) IS_PSEN_INVERTED
    FIELD/parameter Bit(32) IS_PSINCDEC_INVERTED
    FIELD/parameter Bit(32) IS_PWRDWN_INVERTED
    FIELD/parameter Bit(32) IS_RST_INVERTED
    FIELD/output Bit(1) LOCKED
    FIELD/input Bit(1) PSCLK
    FIELD/output Bit(1) PSDONE
    FIELD/input Bit(1) PSEN
    FIELD/input Bit(1) PSINCDEC
    FIELD/input Bit(1) PWRDWN
    FIELD/parameter FLOAT REF_JITTER1
    FIELD/parameter FLOAT REF_JITTER2
    FIELD/input Bit(1) RST
    FIELD/Ptr/parameter Bit(8) SS_EN
    FIELD/Ptr/parameter Bit(8) SS_MODE
    FIELD/parameter Bit(32) SS_MOD_PERIOD
    FIELD/Ptr/parameter Bit(8) STARTUP_WAIT
}
INTERFACE PipeIn(width=32)  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(width) v )
}
INTERFACE SelectIndexIfc(funnelWidth=20,width=14)  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    FIELD Bit(14) out
    FIELD/Ptr/Count funnelWidth  Bit(14) in
    FIELD Bit(5) index
}
INTERFACE top_sync_vg_patternIFC  {
    FILE generated_PC_top_PF_sync_OC_h
    FIELD/input Bit(1) CLK
    FIELD/parameter Bit(12) HV_OFFSET_0
    FIELD/parameter Bit(12) HV_OFFSET_1
    FIELD/parameter Bit(12) H_BP
    FIELD/parameter Bit(12) H_FP
    FIELD/parameter Bit(12) H_SYNC
    FIELD/parameter Bit(12) H_TOTAL
    FIELD/parameter Bit(1) INTERLACED
    FIELD/parameter Bit(20) PATTERN_RAMP_STEP
    FIELD/parameter Bit(8) PATTERN_TYPE
    FIELD/parameter Bit(12) V_BP_0
    FIELD/parameter Bit(12) V_BP_1
    FIELD/parameter Bit(12) V_FP_0
    FIELD/parameter Bit(12) V_FP_1
    FIELD/parameter Bit(12) V_SYNC_0
    FIELD/parameter Bit(12) V_SYNC_1
    FIELD/parameter Bit(12) V_TOTAL_0
    FIELD/parameter Bit(12) V_TOTAL_1
    FIELD/output Bit(1) adv7511_clk
    FIELD/output Bit(36) adv7511_d
    FIELD/output Bit(1) adv7511_de
    FIELD/output Bit(1) adv7511_hs
    FIELD/output Bit(1) adv7511_vs
    FIELD/input Bit(1) nRST
}
EMODULE BUFG MbufgBUFG {
    FILE _OC__OC__PC__OC__OC__PC_xilinx_PC_VBUFG_OC_h
}
EMODULE Dummy PipeIn(width=32) {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
}
EMODULE MMCME2_ADV Mmcme2MMCME2_ADV {
    FILE _OC__OC__PC__OC__OC__PC_xilinx_PC_VMMCME2_PF_ADV_OC_h
}
EMODULE ResetInverter MResetInverterResetInverter {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_resetInverter_OC_h
}
EMODULE/Verilog SelectIndex(funnelWidth=20,width=14) SelectIndexIfc(funnelWidth=20,width=14) {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
}
EMODULE top_sync_vg_pattern top_sync_vg_patternIFC {
    FILE generated_PC_top_PF_sync_OC_h
}
MODULE ClockImageon ClockImageonIfc {
    FILE hdmi_OC_cpp
    FIELD MMCME2_ADV imageon_pll
    PARAMS imageon_pll REF_JITTER2=0.01,REF_JITTER1=0.01,CLKOUT2_PHASE=0.0,CLKOUT2_DUTY_CYCLE=0.5,CLKOUT2_DIVIDE=1,CLKOUT1_PHASE=0.0,CLKOUT1_DUTY_CYCLE=0.5,CLKOUT1_DIVIDE=32,CLKOUT0_PHASE=0.0,CLKOUT0_DUTY_CYCLE=0.5,CLKOUT0_DIVIDE_F=8.0,DIVCLK_DIVIDE=1,CLKIN2_PERIOD=6.7340070000000001,CLKIN1_PERIOD=10.0,CLKFBOUT_PHASE=0.0,CLKFBOUT_MULT_F=8.0,STARTUP_WAIT="FALSE",COMPENSATION="ZHOLD",CLKOUT4_CASCADE="FALSE",CLKOUT2_USE_FINE_PS="FALSE",CLKOUT1_USE_FINE_PS="FALSE",CLKOUT0_USE_FINE_PS="FALSE",CLKFBOUT_USE_FINE_PS="FALSE",BANDWIDTH="OPTIMIZED"
    FIELD ResetInverter rinverter
    FIELD BUFG fbclockb
    FIELD BUFG hdmi_clockb
    FIELD BUFG imageon_clockb
    METHOD/Rule/Action RULE$init__ENA {
        LET Bit(1) :rinverter$RESET_IN = nRST
        LET Bit(1) :imageon_pll$CLKIN2 = 0
        LET Bit(1) :imageon_pll$CLKINSEL = 1
        LET Bit(7) :imageon_pll$DADDR = 0
        LET Bit(1) :imageon_pll$DCLK = 0
        LET Bit(1) :imageon_pll$DEN = 0
        LET Bit(16) :imageon_pll$DI = 0
        LET Bit(1) :imageon_pll$DWE = 0
        LET Bit(1) :imageon_pll$PSCLK = 0
        LET Bit(1) :imageon_pll$PSEN = 0
        LET Bit(1) :imageon_pll$PSINCDEC = 0
        LET Bit(1) :imageon_pll$PWRDWN = 0
        LET Bit(1) :fbclockb$I = imageon_pll$CLKFBOUT
        LET Bit(1) :imageon_pll$CLKFBIN = fbclockb$O
        LET Bit(1) :imageon_pll$RST = rinverter$RESET_OUT
        LET Bit(1) :imageon_pll$CLKIN1 = __defaultClock
        LET Bit(1) :hdmi_clockb$I = imageon_pll$CLKOUT0
        LET Bit(1) :hdmiClock = hdmi_clockb$O
        LET Bit(1) :imageon_clockb$I = imageon_pll$CLKOUT1
        LET Bit(1) :imageonClock = imageon_clockb$O
    }
}
MODULE Echo EchoIfc {
    FILE hdmi_OC_cpp
    FIELD ClockImageon iclock
    FIELD HdmiBlock hdmi
    FIELD Bit(1) i2c_mux_reset_n_reg
    FIELD Bit(1) busy
    FIELD Bit(1) busy_delay
    FIELD Bit(32) v_temp
    FIELD Bit(32) v_delay
    FIELD Bit(16) a_temp
    FIELD Bit(16) b_temp
    FIELD Bit(16) a_delay
    FIELD Bit(16) b_delay
    FIELD Bit(32) v_type
    METHOD/Rule/Action RULE$initHdmi__ENA {
        LET Bit(1) :iclock$CLK = fmc_video_clk1_v
        LET Bit(1) :iclock$nRST = __defaultnReset
        LET Bit(1) :hdmi$CLK = iclock$hdmiClock
        LET Bit(1) :hdmi$nRST = __defaultnReset
        LET Bit(1) :adv7511_clk = hdmi$adv7511_clk
        LET Bit(36) :adv7511_d = hdmi$adv7511_d
        LET Bit(1) :adv7511_de = hdmi$adv7511_de
        LET Bit(1) :adv7511_hs = hdmi$adv7511_hs
        LET Bit(1) :adv7511_vs = hdmi$adv7511_vs
        LET Bit(1) :i2c_mux_reset_n = i2c_mux_reset_n_reg
    }
    METHOD/Action request$say__ENA ( Bit(32) v ) if ((((busy) != (0)) ^ (1))) {
        PRINTF :printf{"request.say %x\n",request$say$v}
        STORE :v_temp = request$say$v
        STORE :busy = 1
        STORE :v_type = 1
    }
    METHOD/Action request$muxreset__ENA ( Bit(1) v ) {
        STORE :i2c_mux_reset_n_reg = request$muxreset$v
    }
    METHOD/Action request$say2__ENA ( Bit(16) a , Bit(16) b ) if ((((busy) != (0)) ^ (1))) {
        STORE :a_temp = request$say2$a
        STORE :b_temp = request$say2$b
        STORE :busy = 1
        STORE :v_type = 2
    }
    METHOD/Action request$setLeds__ENA ( Bit(8) v )
    METHOD/Rule/Action RULE$delay_rule__ENA if (((((busy) != (0)) & ((busy_delay) == (0))) != (0))) {
        STORE :busy = 0
        STORE :busy_delay = 1
        STORE :v_delay = v_temp
        STORE :a_delay = a_temp
        STORE :b_delay = b_temp
    }
    METHOD/Rule/Action RULE$respond_rule__ENA if (((busy_delay) != (0))) {
        STORE :busy_delay = 0
        CALL/Action ((v_type) == (1)):indication$heard__ENA{v_delay}
        CALL/Action !((v_type) == (1)):indication$heard2__ENA{a_delay,b_delay}
    }
}
MODULE HdmiBlock HdmiBlockIfc {
    FILE hdmi_OC_cpp
    FIELD top_sync_vg_pattern top_sync
    METHOD/Rule/Action RULE$initHdmi__ENA {
        LET Bit(1) :top_sync$CLK = __defaultClock
        LET Bit(1) :top_sync$nRST = __defaultnReset
        LET Bit(1) :adv7511_clk = top_sync$adv7511_clk
        LET Bit(36) :adv7511_d = top_sync$adv7511_d
        LET Bit(1) :adv7511_de = top_sync$adv7511_de
        LET Bit(1) :adv7511_hs = top_sync$adv7511_hs
        LET Bit(1) :adv7511_vs = top_sync$adv7511_vs
    }
}
