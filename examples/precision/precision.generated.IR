EMODULE l_ainterface_OC_IVectorIndication (
    METHOD heard__ENA (
        PARAM heard$meth SIZE 6
        PARAM heard$v SIZE 4
    )
    METHOD heard__RDY SIZE 1
)
EMODULE l_ainterface_OC_IVectorRequest (
    METHOD say__ENA (
        PARAM say$meth SIZE 6
        PARAM say$v SIZE 4
    )
    METHOD say__RDY SIZE 1
)
EMODULE l_ainterface_OC_PipeIn (
    METHOD enq__ENA (
        PARAM enq$v SIZE 32
    )
    METHOD enq__RDY SIZE 1
)
EMODULE l_ainterface_OC_PipeIn_OC_1 (
    METHOD enq__ENA (
        PARAM enq$v SIZE 10
    )
    METHOD enq__RDY SIZE 1
)
EMODULE l_ainterface_OC_PipeOut (
    METHOD deq__ENA
    METHOD deq__RDY SIZE 1
    METHOD first SIZE 32
    METHOD first__RDY SIZE 1
)
EMODULE l_ainterface_OC_PipeOut_OC_2 (
    METHOD deq__ENA
    METHOD deq__RDY SIZE 1
    METHOD first SIZE 10
    METHOD first__RDY SIZE 1
)
EMODULE l_module_OC_Fifo_OC_0 (
    FIELD l_ainterface_OC_PipeIn_OC_1:in
    FIELD l_ainterface_OC_PipeOut_OC_2:out
    METHOD in$enq__ENA (
        PARAM in$enq$v SIZE 10
    )
    METHOD in$enq__RDY SIZE 1
    METHOD out$deq__ENA
    METHOD out$deq__RDY SIZE 1
    METHOD out$first SIZE 10
    METHOD out$first__RDY SIZE 1
)
EMODULE l_struct_OC_ValueType (
    FIELD a SIZE 6
    FIELD b SIZE 4
)
MODULE l_module_OC_Fifo1_OC_3 (
    FIELD l_struct_OC_ValueType:element SIZE 10
    FIELD full SIZE 8
    METHOD in$enq__ENA (
        PARAM in$enq$v SIZE 10
        STORE :element = in$enq$v
        STORE :full = 1
    )
    METHOD in$enq__RDY SIZE 1 = (full ^ 1) (
        METAREAD full 
    )
    METHOD out$deq__ENA (
        STORE :full = 0
    )
    METHOD out$deq__RDY SIZE 1 = (full) (
        METAREAD full 
    )
    METHOD out$first SIZE 10 = (element) (
        METAREAD element 
    )
    METHOD out$first__RDY SIZE 1 = (full) (
        METAREAD full 
    )
)
MODULE l_module_OC_IVector (
    FIELD l_ainterface_OC_IVectorRequest:request
    OUTCALL ind = l_ainterface_OC_IVectorIndication
    FIELD/PTR  l_ainterface_OC_IVectorIndication:ind
    FIELD l_module_OC_Fifo1_OC_3:fifo SIZE 18
    FIELD fcounter SIZE 8
    FIELD counter SIZE 9
    FIELD gcounter SIZE 9
    METHOD request$say__ENA (
        PARAM request$say$meth SIZE 6
        PARAM request$say$v SIZE 4
        STORE/Alloca :temp$a = request$say$meth
        STORE/Alloca :temp$b = request$say$v
        METAINVOKE fifo$in$enq__ENA 
        CALL/Action :fifo$in$enq__ENA{fifo$in$enq$v;temp}
    )
    METHOD request$say__RDY SIZE 1 = (fifo$in$enq__RDY) (
        METAINVOKE fifo$in$enq__RDY 
    )
    METHOD /RULE respond__ENA (
        METAINVOKE fifo$out$first 
        STORE/Alloca :temp = fifo$out$first{}
        METAINVOKE fifo$out$deq__ENA 
        CALL/Action :fifo$out$deq__ENA{}
        METAINVOKE ind$heard__ENA 
        CALL/Action :ind$heard__ENA{ind$heard$meth;temp$a,ind$heard$v;temp$b}
    )
    METHOD /RULE respond__RDY SIZE 1 = ((fifo$out$first__RDY & fifo$out$deq__RDY) & ind$heard__RDY) (
        METAINVOKE fifo$out$first__RDY 
        METAINVOKE fifo$out$deq__RDY 
        METAINVOKE ind$heard__RDY 
    )
)
EMODULE l_class_OC_IVectorTest (
    FIELD l_module_OC_IVector:ivector SIZE 44
)
EMODULE l_module_OC_Fifo (
    FIELD l_ainterface_OC_PipeIn:in
    FIELD l_ainterface_OC_PipeOut:out
    METHOD in$enq__ENA (
        PARAM in$enq$v SIZE 32
    )
    METHOD in$enq__RDY SIZE 1
    METHOD out$deq__ENA
    METHOD out$deq__RDY SIZE 1
    METHOD out$first SIZE 32
    METHOD out$first__RDY SIZE 1
)
MODULE l_module_OC_Fifo1 (
    FIELD element SIZE 32
    FIELD full SIZE 8
    METHOD in$enq__ENA (
        PARAM in$enq$v SIZE 32
        STORE :element = in$enq$v
        STORE :full = 1
    )
    METHOD in$enq__RDY SIZE 1 = (full ^ 1) (
        METAREAD full 
    )
    METHOD out$deq__ENA (
        STORE :full = 0
    )
    METHOD out$deq__RDY SIZE 1 = (full) (
        METAREAD full 
    )
    METHOD out$first SIZE 32 = (element) (
        METAREAD element 
    )
    METHOD out$first__RDY SIZE 1 = (full) (
        METAREAD full 
    )
)
MODULE l_module_OC_IVectorInd (
    FIELD l_ainterface_OC_IVectorIndication:ind
    METHOD ind$heard__ENA (
        PARAM ind$heard$meth SIZE 6
        PARAM ind$heard$v SIZE 4
    )
    METHOD ind$heard__RDY SIZE 1 = (1)
)
