STRUCT NOCDataH  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    FIELD Bit(16) length
    FIELD Bit(128) data
}
STRUCT ValueType  {
    FILE precision_OC_cpp
    FIELD Bit(6) a
    FIELD Bit(4) b
}
STRUCT IVectorTest  {
    FILE precision_OC_cpp
    FIELD IVector ivector
}
INTERFACE AsyncControlIfc  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    FIELD/input Bit(1) CLK
    FIELD/input Bit(1) nRST
    FIELD/input Bit(1) start
    FIELD/input Bit(1) ack
    FIELD/input Bit(1) clear
    FIELD/output Bit(1) out
    FIELD/output Bit(1) done
}
INTERFACE Fifo(width=10)  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_fifo_OC_h
    INTERFACE PipeIn(width=10) in
    INTERFACE PipeOut(width=10) out
}
INTERFACE IVectorIFC  {
    FILE precision_OC_cpp
    INTERFACE IVectorRequest request
    INTERFACE/Ptr IVectorIndication ind
}
INTERFACE IVectorIndication  {
    FILE precision_OC_cpp
    METHOD/Action heard__ENA ( Bit(6) meth , Bit(4) v )
}
INTERFACE IVectorRequest  {
    FILE precision_OC_cpp
    METHOD/Action say__ENA ( Bit(6) meth , Bit(4) v )
}
INTERFACE MuxPipeIfc  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_mux_OC_h
    INTERFACE PipeIn(width=144) in
    INTERFACE PipeIn(width=144) forward
    INTERFACE/Ptr PipeIn(width=144) out
}
INTERFACE PipeIn(width=32)  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(width) v )
}
INTERFACE PipeOut(width=10)  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    METHOD/Action deq__ENA
    METHOD first Bit(width)
}
INTERFACE SelectIndexIfc(funnelWidth=20,width=14)  {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
    FIELD Bit(14) out
    FIELD/Ptr/Count funnelWidth  Bit(14) in
    FIELD Bit(5) index
}
EMODULE AsyncControl AsyncControlIfc {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
}
EMODULE Dummy PipeIn(width=32) {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
}
EMODULE Fifo1Base(width=10) Fifo(width=10) {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_fifo_OC_h
}
EMODULE IVectorInd IVectorIndication {
    FILE precision_OC_cpp
}
EMODULE MuxPipe MuxPipeIfc {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_mux_OC_h
}
EMODULE/Verilog SelectIndex(funnelWidth=20,width=14) SelectIndexIfc(funnelWidth=20,width=14) {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_atomicc_OC_h
}
MODULE Fifo1(width=10) Fifo(width=10) {
    FILE _OC__OC__PC__OC__OC__PC_lib_PC_fifo_OC_h
    FIELD Fifo1Base(width=10) fifo
    METHOD/Action in$enq__ENA ( ValueType v ) {
        CALL/Action :fifo$in$enq__ENA{in$enq$v}
    }
    METHOD/Action out$deq__ENA {
        CALL/Action :fifo$out$deq__ENA{}
    }
    METHOD out$first ValueType = ((fifo$out$first)) {
        CALL :fifo$out$first{}
    }
}
MODULE IVector IVectorIFC {
    FILE precision_OC_cpp
    FIELD Fifo1(width=10) fifo
    FIELD Bit(((14 / 7) + (3 * 2))) fcounter
    FIELD Bit(9) counter
    FIELD Bit(9) gcounter
    METHOD/Action request$say__ENA ( Bit(6) meth , Bit(4) v ) if ((1)) {
        ALLOCA ValueType _request$say$temp
        LET Bit(6) :_request$say$temp.a = request$say$meth
        LET Bit(4) :_request$say$temp.b = request$say$v
        CALL/Action :fifo$in$enq__ENA{_request$say$temp}
    }
    METHOD/Rule/Action RULE$respond__ENA {
        ALLOCA ValueType _RULE$respond$temp
        CALL :fifo$out$first{}
        LET ValueType :_RULE$respond$temp = fifo$out$first
        CALL/Action :fifo$out$deq__ENA{}
        CALL/Action :ind$heard__ENA{_RULE$respond$temp.a,_RULE$respond$temp.b}
    }
}
