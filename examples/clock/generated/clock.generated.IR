INTERFACE Ft600  {
    FIELD/input Bit(1) usb_clk
    FIELD/input Bit(1) usb_rxf
    FIELD/input Bit(1) usb_txe
    FIELD/output Bit(1) usb_rd_n
    FIELD/output Bit(1) usb_wr_n
    FIELD/output Bit(1) usb_oe_n
    FIELD/inout Bit(16) usb_ad
}
INTERFACE MIOBUF  {
    FIELD/parameter Bit(32) DRIVE
    FIELD/input Bit(1) I
    FIELD/Ptr/parameter Bit(8) IBUF_LOW_PWR
    FIELD/inout Bit(1) IO
    FIELD/Ptr/parameter Bit(8) IOSTANDARD
    FIELD/output Bit(1) O
    FIELD/Ptr/parameter Bit(8) SLEW
    FIELD/input Bit(1) T
}
EMODULE IOBUF MIOBUF {
}
MODULE ModFt600 Ft600 {
    FIELD Bit(1) usb_fifo_empty
    FIELD Bit(2) usb_rxf_delay
    FIELD Bit(1) usb_txe_delay
    FIELD/Count 16  IOBUF iobufs
    METHOD/Action FOR$0Body__ENA ( Bit(32) __inst$Genvar1 ) {
        LET Bit(1) :iobufs[__inst$Genvar1]$IO = (usb_ad)  >>  (__inst$Genvar1)
    }
    METHOD/Rule/Action RULE$handshake__ENA {
        LET Bit(1) :usb_rd_n = (usb_rxf_delay) != (0)
        LET Bit(1) :usb_oe_n = (usb_rxf_delay) & (1)
        LET Bit(1) :usb_wr_n = ((usb_txe_delay) | (usb_fifo_empty)) | (((usb_rxf_delay) & (1)) ^ (-1))
        STORE :usb_fifo_empty = 0
        STORE :usb_rxf_delay = ((usb_rxf_delay) << (1)) | (usb_rxf)
        STORE :usb_txe_delay = usb_txe
    }
    METHOD/Rule/Action RULE$iobufs__ENA {
        GENERATE :__inst$Genvar1,(0),((__inst$Genvar1 < 16U)),(1),FOR$0Body__ENA
    }
}
