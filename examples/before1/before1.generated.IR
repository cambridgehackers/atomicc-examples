MODULE l_ainterface_OC_EchoIndication = 2 (
    METHOD heard__ENA 1  = (
        PARAM heard$meth [31:0]
        PARAM heard$v [31:0]
    )
    METHOD heard__RDY 0  = 1(
    )
)
MODULE l_ainterface_OC_EchoRequest = 10 (
    METHOD say2__ENA 1  = (
        PARAM say2$meth [31:0]
        PARAM say2$v [31:0]
    )
    METHOD say2__RDY 0  = 1(
    )
    METHOD say__ENA 1  = (
        PARAM say$meth [31:0]
        PARAM say$v [31:0]
    )
    METHOD say__RDY 0  = 1(
    )
)
MODULE l_ainterface_OC_PipeIn = 11 (
    METHOD enq__ENA 1  = (
        PARAM enq$v [191:0]
    )
    METHOD enq__RDY 0  = 1(
    )
)
MODULE l_ainterface_OC_PipeIn_OC_0 = 5 (
    METHOD enq__ENA 1  = (
        PARAM enq$v [95:0]
    )
    METHOD enq__RDY 0  = 1(
    )
)
MODULE l_class_OC_foo = 1 (
    FIELD indication VEC -1 RANGE  IR 2 PTR 0 TYPE 
)
MODULE l_module_OC_Echo = 12 (
    OUTCALL indication = 2
    RULE delay_rule
    RULE respond_rule
    FIELD request VEC -1 RANGE  IR 10 PTR 0 TYPE 
    FIELD busy VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD meth_temp VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD v_temp VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD busy_delay VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD meth_delay VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD v_delay VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD x VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD y VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD indication VEC -1 RANGE  IR 2 PTR 1 TYPE 
    METHOD delay_rule__ENA 1  = (
        STORE busy, 0, 
        STORE busy_delay, 1, 
        STORE meth_delay, meth_temp, 
        STORE v_delay, v_temp, 
        METAREAD meth_temp 
        METAREAD v_temp 
        METAWRITE busy 
        METAWRITE busy_delay 
        METAWRITE meth_delay 
        METAWRITE v_delay 
    )
    METHOD delay_rule__RDY 0  = ((busy != 0) & (busy_delay == 0)) != 0(
        METAREAD busy 
        METAREAD busy_delay 
    )
    METHOD request$say2__ENA 1  = (
        PARAM request$say2$meth [31:0]
        PARAM request$say2$v [31:0]
        STORE meth_temp, request$say2$meth, 
        STORE v_temp, request$say2$v, 
        STORE busy, 1, 
        METAWRITE busy 
        METAWRITE meth_temp 
        METAWRITE v_temp 
    )
    METHOD request$say2__RDY 0  = (busy != 0) ^ 1(
        METAREAD busy 
    )
    METHOD request$say__ENA 1  = (
        PARAM request$say$meth [31:0]
        PARAM request$say$v [31:0]
        STORE meth_temp, request$say$meth, 
        STORE v_temp, request$say$v, 
        STORE busy, 1, 
        METAWRITE busy 
        METAWRITE meth_temp 
        METAWRITE v_temp 
    )
    METHOD request$say__RDY 0  = (busy != 0) ^ 1(
        METAREAD busy 
    )
    METHOD respond_rule__ENA 1  = (
        STORE busy_delay, 0, 
        CALL indication$heard__ENA{indication$heard$meth;meth_delay,indication$heard$v;v_delay}, , 1
        METAREAD meth_delay 
        METAREAD v_delay 
        METAWRITE busy_delay 
        METAINVOKE indication$heard__ENA 
    )
    METHOD respond_rule__RDY 0  = (busy_delay != 0) & indication$heard__RDY(
        METAREAD busy_delay 
        METAINVOKE indication$heard__RDY 
    )
)
MODULE l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoIndication_union_KD__KD_EchoIndication_heard = 8 (
    FIELD meth VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD v VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
)
MODULE l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoIndication_union = 7 (
    FIELD heard VEC -1 RANGE [63:0] IR 8 PTR 0 TYPE 
)
MODULE l_struct_OC_EchoIndication_data = 6 (
    FIELD tag VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD data VEC -1 RANGE [63:0] IR 7 PTR 0 TYPE 
)
MODULE l_module_OC_EchoIndicationInput = 14 (
    OUTCALL indication = 2
    RULE input_rule
    FIELD pipe VEC -1 RANGE  IR 5 PTR 0 TYPE 
    FIELD indication VEC -1 RANGE  IR 2 PTR 1 TYPE 
    FIELD busy_delay VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD meth_delay VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD v_delay VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    METHOD input_rule__ENA 1  = (
        STORE busy_delay, 0, 
        CALL indication$heard__ENA{indication$heard$meth;meth_delay,indication$heard$v;v_delay}, , 1
        METAREAD meth_delay 
        METAREAD v_delay 
        METAWRITE busy_delay 
        METAINVOKE indication$heard__ENA 
    )
    METHOD input_rule__RDY 0  = (busy_delay != 0) & indication$heard__RDY(
        METAREAD busy_delay 
        METAINVOKE indication$heard__RDY 
    )
    METHOD pipe$enq__ENA 1  = (
        PARAM pipe$enq$v [95:0]
        STORE v_2e_addr, pipe$enq$v, 
        STORE meth_delay, v_2e_addr$data$heard$meth, v_2e_addrfoosuff$tag == 1
        STORE v_delay, v_2e_addr$data$heard$v, v_2e_addrfoosuff$tag == 1
        STORE busy_delay, 1, v_2e_addrfoosuff$tag == 1
        METAREAD v_2e_addr$data$heard$meth v_2e_addrfoosuff$tag == 1
        METAREAD v_2e_addr$data$heard$v v_2e_addrfoosuff$tag == 1
        METAWRITE busy_delay v_2e_addrfoosuff$tag == 1
        METAWRITE meth_delay v_2e_addrfoosuff$tag == 1
        METAWRITE v_delay v_2e_addrfoosuff$tag == 1
    )
    METHOD pipe$enq__RDY 0  = (busy_delay != 0) ^ 1(
        METAREAD busy_delay 
    )
)
MODULE l_module_OC_EchoIndicationOutput = 4 (
    OUTCALL pipe = 5
    RULE output_rulee
    RULE output_ruleo
    FIELD indication VEC -1 RANGE  IR 2 PTR 0 TYPE 
    FIELD pipe VEC -1 RANGE  IR 5 PTR 1 TYPE 
    FIELD ind0 VEC -1 RANGE [95:0] IR 6 PTR 0 TYPE 
    FIELD ind1 VEC -1 RANGE [95:0] IR 6 PTR 0 TYPE 
    FIELD ind_busy VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD even VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    METHOD indication$heard__ENA 1  = (
        PARAM indication$heard$meth [31:0]
        PARAM indication$heard$v [31:0]
        STORE ind1$tag, 1, even != 0
        STORE ind1$data$heard$meth, indication$heard$meth, even != 0
        STORE ind1$data$heard$v, indication$heard$v, even != 0
        STORE ind0$tag, 1, (even != 0) ^ 1
        STORE ind0$data$heard$meth, indication$heard$meth, (even != 0) ^ 1
        STORE ind0$data$heard$v, indication$heard$v, (even != 0) ^ 1
        STORE ind_busy, 1, 
        STORE even, (even != 0) ^ 1, 
        METAREAD even 
        METAWRITE even 
        METAWRITE ind0$data$heard$meth (even != 0) ^ 1
        METAWRITE ind0$data$heard$v (even != 0) ^ 1
        METAWRITE ind0$tag (even != 0) ^ 1
        METAWRITE ind1$data$heard$meth even != 0
        METAWRITE ind1$data$heard$v even != 0
        METAWRITE ind1$tag even != 0
        METAWRITE ind_busy 
    )
    METHOD indication$heard__RDY 0  = (ind_busy != 0) ^ 1(
        METAREAD ind_busy 
    )
    METHOD output_rulee__ENA 1  = (
        STORE ind_busy, 0, 
        CALL pipe$enq__ENA{pipe$enq$v;ind0}, , 1
        METAREAD ind0 
        METAWRITE ind_busy 
        METAINVOKE pipe$enq__ENA 
    )
    METHOD output_rulee__RDY 0  = (((ind_busy != 0) & (even != 0)) != 0) & pipe$enq__RDY(
        METAREAD even 
        METAREAD ind_busy 
        METAINVOKE pipe$enq__RDY 
    )
    METHOD output_ruleo__ENA 1  = (
        STORE ind_busy, 0, 
        CALL pipe$enq__ENA{pipe$enq$v;ind1}, , 1
        METAREAD ind1 
        METAWRITE ind_busy 
        METAINVOKE pipe$enq__ENA 
    )
    METHOD output_ruleo__RDY 0  = (((ind_busy != 0) & (even == 0)) != 0) & pipe$enq__RDY(
        METAREAD even 
        METAREAD ind_busy 
        METAINVOKE pipe$enq__RDY 
    )
)
MODULE l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoRequest_union_KD__KD_EchoRequest_say = 17 (
    FIELD meth VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD v VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
)
MODULE l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoRequest_union_KD__KD_EchoRequest_say2 = 18 (
    FIELD meth VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD v VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD v2 VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
)
MODULE l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoRequest_union = 16 (
    FIELD say VEC -1 RANGE [63:0] IR 17 PTR 0 TYPE 
    FIELD say2 VEC -1 RANGE [95:0] IR 18 PTR 0 TYPE 
)
MODULE l_struct_OC_EchoRequest_data = 15 (
    FIELD tag VEC -1 RANGE  IR -1 PTR 0 TYPE reg[31:0] @
    FIELD data VEC -1 RANGE [159:0] IR 16 PTR 0 TYPE 
)
MODULE l_module_OC_EchoRequestInput = 9 (
    OUTCALL request = 10
    FIELD pipe VEC -1 RANGE  IR 11 PTR 0 TYPE 
    FIELD request VEC -1 RANGE  IR 10 PTR 1 TYPE 
    METHOD pipe$enq__ENA 1  = (
        PARAM pipe$enq$v [191:0]
        STORE v_2e_addr, pipe$enq$v, 
        CALL request$say__ENA{request$say$meth;v_2e_addr$data$say$meth,request$say$v;v_2e_addr$data$say$v},  & v_2e_addrfoosuff$tag == 1, 1
        CALL request$say2__ENA{request$say2$meth;v_2e_addr$data$say2$meth,request$say2$v;v_2e_addr$data$say2$v},  & v_2e_addrfoosuff13$tag == 2, 1
        METAREAD v_2e_addr$data$say$meth v_2e_addrfoosuff$tag == 1
        METAREAD v_2e_addr$data$say$v v_2e_addrfoosuff$tag == 1
        METAREAD v_2e_addr$data$say2$meth v_2e_addrfoosuff13$tag == 2
        METAREAD v_2e_addr$data$say2$v v_2e_addrfoosuff13$tag == 2
        METAINVOKE request$say2__ENA v_2e_addrfoosuff13$tag == 2
        METAINVOKE request$say__ENA v_2e_addrfoosuff$tag == 1
    )
    METHOD pipe$enq__RDY 0  = (request$say__RDY | ((v_2e_addrfoosufffoosuff$tag == 1) ^ 1)) & (request$say2__RDY | ((v_2e_addrfoosuff13foosuff$tag == 2) ^ 1))(
        METAINVOKE request$say2__RDY 
        METAINVOKE request$say__RDY 
    )
)
MODULE l_module_OC_EchoRequestOutput = 13 (
    OUTCALL pipe = 11
    FIELD request VEC -1 RANGE  IR 10 PTR 0 TYPE 
    FIELD pipe VEC -1 RANGE  IR 11 PTR 1 TYPE 
    METHOD request$say2__ENA 1  = (
        PARAM request$say2$meth [31:0]
        PARAM request$say2$v [31:0]
        STORE ind$tag, 2, 
        STORE ind$data$say2$meth, request$say2$meth, 
        STORE ind$data$say2$v, request$say2$v, 
        CALL pipe$enq__ENA{pipe$enq$v;ind}, , 1
        METAWRITE ind$data$say2$meth 
        METAWRITE ind$data$say2$v 
        METAINVOKE pipe$enq__ENA 
    )
    METHOD request$say2__RDY 0  = pipe$enq__RDY(
        METAINVOKE pipe$enq__RDY 
    )
    METHOD request$say__ENA 1  = (
        PARAM request$say$meth [31:0]
        PARAM request$say$v [31:0]
        STORE ind$tag, 1, 
        STORE ind$data$say$meth, request$say$meth, 
        STORE ind$data$say$v, request$say$v, 
        CALL pipe$enq__ENA{pipe$enq$v;ind}, , 1
        METAWRITE ind$data$say$meth 
        METAWRITE ind$data$say$v 
        METAINVOKE pipe$enq__ENA 
    )
    METHOD request$say__RDY 0  = pipe$enq__RDY(
        METAINVOKE pipe$enq__RDY 
    )
)
MODULE l_module_OC_Connect = 3 (
    SOFTWARE lEII_test$indication:indication
    SOFTWARE lEIO$pipe:lEII_test$pipe
    SOFTWARE lERI$request:lEcho$request
    SOFTWARE lERO_test$pipe:lERI$pipe
    SOFTWARE lEcho$indication:lEIO$indication
    RULE swap2_rule
    RULE swap_rule
    FIELD lEIO VEC -1 RANGE [255:0] IR 4 PTR 0 TYPE 
    FIELD lERI VEC -1 RANGE  IR 9 PTR 0 TYPE 
    FIELD lEcho VEC -1 RANGE [255:0] IR 12 PTR 0 TYPE 
    FIELD lERO_test VEC -1 RANGE  IR 13 PTR 0 TYPE 
    FIELD lEII_test VEC -1 RANGE [95:0] IR 14 PTR 0 TYPE 
    METHOD swap2_rule__ENA 1  = (
        CALL lEcho$[ERROR__ZN4Echo7y2xnullEv_ERROR]{}, , 1
        METAINVOKE lEcho$[ERROR__ZN4Echo7y2xnullEv_ERROR] 
    )
    METHOD swap2_rule__RDY 0  = 1(
    )
    METHOD swap_rule__ENA 1  = (
        CALL lEcho$[ERROR__ZN4Echo3x2yEv_ERROR]{}, , 1
        CALL lEcho$[ERROR__ZN4Echo3y2xEv_ERROR]{}, , 1
        METAINVOKE lEcho$[ERROR__ZN4Echo3x2yEv_ERROR] 
        METAINVOKE lEcho$[ERROR__ZN4Echo3y2xEv_ERROR] 
    )
    METHOD swap_rule__RDY 0  = 1(
    )
)
