EMODULE l_ainterface_OC_EchoIndication 0 (
    METHOD heard__ENA (
        PARAM meth INTEGER_32
        PARAM v INTEGER_32
    )
    METHOD heard__RDY INTEGER_1
)
EMODULE l_ainterface_OC_EchoRequest 0 (
    METHOD say2__ENA (
        PARAM meth INTEGER_32
        PARAM v INTEGER_32
    )
    METHOD say2__RDY INTEGER_1
    METHOD say__ENA (
        PARAM meth INTEGER_32
        PARAM v INTEGER_32
    )
    METHOD say__RDY INTEGER_1
)
EMODULE l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoRequest_union_KD__KD_EchoRequest_say 64 (
    FIELD meth INTEGER_32
    FIELD v INTEGER_32
)
EMODULE l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoRequest_union_KD__KD_EchoRequest_say2 96 (
    FIELD meth INTEGER_32
    FIELD v INTEGER_32
    FIELD v2 INTEGER_32
)
EMODULE l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoRequest_union 160 (
    FIELD say l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoRequest_union_KD__KD_EchoRequest_say
    FIELD say2 l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoRequest_union_KD__KD_EchoRequest_say2
)
EMODULE l_struct_OC_EchoRequest_data 192 (
    FIELD tag INTEGER_32
    FIELD data l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoRequest_union
)
EMODULE l_ainterface_OC_PipeIn 0 (
    METHOD enq__ENA (
        PARAM v l_struct_OC_EchoRequest_data
    )
    METHOD enq__RDY INTEGER_1
)
EMODULE l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoIndication_union_KD__KD_EchoIndication_heard 64 (
    FIELD meth INTEGER_32
    FIELD v INTEGER_32
)
EMODULE l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoIndication_union 64 (
    FIELD heard l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoIndication_union_KD__KD_EchoIndication_heard
)
EMODULE l_struct_OC_EchoIndication_data 96 (
    FIELD tag INTEGER_32
    FIELD data l_struct_OC__IC_anonymous_AC_struct_JC__KD__KD_EchoIndication_union
)
EMODULE l_ainterface_OC_PipeIn_OC_0 0 (
    METHOD enq__ENA (
        PARAM v l_struct_OC_EchoIndication_data
    )
    METHOD enq__RDY INTEGER_1
)
EMODULE l_ainterface_OC_Swap 0 (
    METHOD x2y__ENA
    METHOD x2y__RDY INTEGER_1
    METHOD y2x__ENA
    METHOD y2x__RDY INTEGER_1
    METHOD y2xnull__ENA
    METHOD y2xnull__RDY INTEGER_1
)
EMODULE l_class_OC_foo 0 (
    FIELD indication l_ainterface_OC_EchoIndication
)
MODULE l_module_OC_Echo 256 (
    FIELD request l_ainterface_OC_EchoRequest
    FIELD swap l_ainterface_OC_Swap
    FIELD busy INTEGER_32
    FIELD meth_temp INTEGER_32
    FIELD v_temp INTEGER_32
    FIELD busy_delay INTEGER_32
    FIELD meth_delay INTEGER_32
    FIELD v_delay INTEGER_32
    FIELD x INTEGER_32
    FIELD y INTEGER_32
    OUTCALL indication = l_ainterface_OC_EchoIndication
    FIELD/Ptr indication l_ainterface_OC_EchoIndication
    METHOD/Rule delay_rule__ENA (
        STORE :busy = 0
        STORE :busy_delay = 1
        METAREAD meth_temp 
        STORE :meth_delay = meth_temp
        METAREAD v_temp 
        STORE :v_delay = v_temp
    )
    METHOD/Rule delay_rule__RDY INTEGER_1 = (((busy != 0) & (busy_delay == 0)) != 0) (
        METAREAD busy 
        METAREAD busy_delay 
    )
    METHOD request$say2__ENA (
        PARAM meth INTEGER_32
        PARAM v INTEGER_32
        STORE :meth_temp = request$say2$meth
        STORE :v_temp = request$say2$v
        STORE :busy = 1
    )
    METHOD request$say2__RDY INTEGER_1 = ((busy != 0) ^ 1) (
        METAREAD busy 
    )
    METHOD request$say__ENA (
        PARAM meth INTEGER_32
        PARAM v INTEGER_32
        STORE :meth_temp = request$say$meth
        STORE :v_temp = request$say$v
        STORE :busy = 1
    )
    METHOD request$say__RDY INTEGER_1 = ((busy != 0) ^ 1) (
        METAREAD busy 
    )
    METHOD/Rule respond_rule__ENA (
        STORE :busy_delay = 0
        METAREAD meth_delay 
        METAREAD v_delay 
        METAINVOKE indication$heard__ENA 
        CALL/Action :indication$heard__ENA{meth_delay,v_delay}
    )
    METHOD/Rule respond_rule__RDY INTEGER_1 = ((busy_delay != 0) & indication$heard__RDY) (
        METAREAD busy_delay 
        METAINVOKE indication$heard__RDY 
    )
    METHOD swap$x2y__ENA (
        METAREAD x 
        STORE :y = x
    )
    METHOD swap$x2y__RDY INTEGER_1 = (1)
    METHOD swap$y2x__ENA (
        METAREAD y 
        STORE :x = y
    )
    METHOD swap$y2x__RDY INTEGER_1 = (1)
    METHOD swap$y2xnull__ENA
    METHOD swap$y2xnull__RDY INTEGER_1 = (1)
)
MODULE l_module_OC_EchoIndicationInput 96 (
    FIELD pipe l_ainterface_OC_PipeIn_OC_0
    OUTCALL indication = l_ainterface_OC_EchoIndication
    FIELD/Ptr indication l_ainterface_OC_EchoIndication
    FIELD busy_delay INTEGER_32
    FIELD meth_delay INTEGER_32
    FIELD v_delay INTEGER_32
    METHOD/Rule input_rule__ENA (
        STORE :busy_delay = 0
        METAREAD meth_delay 
        METAREAD v_delay 
        METAINVOKE indication$heard__ENA 
        CALL/Action :indication$heard__ENA{meth_delay,v_delay}
    )
    METHOD/Rule input_rule__RDY INTEGER_1 = ((busy_delay != 0) & indication$heard__RDY) (
        METAREAD busy_delay 
        METAINVOKE indication$heard__RDY 
    )
    METHOD pipe$enq__ENA (
        PARAM v l_struct_OC_EchoIndication_data
        STORE/Alloca :v_2e_addr = pipe$enq$v
        METAREAD v_2e_addr$data$heard$meth v_2e_addrfoosuff$tag == 1
        STORE (v_2e_addrfoosuff$tag == 1):meth_delay = v_2e_addr$data$heard$meth
        METAREAD v_2e_addr$data$heard$v v_2e_addrfoosuff$tag == 1
        STORE (v_2e_addrfoosuff$tag == 1):v_delay = v_2e_addr$data$heard$v
        STORE (v_2e_addrfoosuff$tag == 1):busy_delay = 1
    )
    METHOD pipe$enq__RDY INTEGER_1 = ((busy_delay != 0) ^ 1) (
        METAREAD busy_delay 
    )
)
MODULE l_module_OC_EchoIndicationOutput 256 (
    FIELD indication l_ainterface_OC_EchoIndication
    OUTCALL pipe = l_ainterface_OC_PipeIn_OC_0
    FIELD/Ptr pipe l_ainterface_OC_PipeIn_OC_0
    FIELD ind0 l_struct_OC_EchoIndication_data
    FIELD ind1 l_struct_OC_EchoIndication_data
    FIELD ind_busy INTEGER_32
    FIELD even INTEGER_32
    METHOD indication$heard__ENA (
        PARAM meth INTEGER_32
        PARAM v INTEGER_32
        METAREAD even 
        METAREAD even 
        STORE (even != 0):ind1$tag = 1
        STORE (even != 0):ind1$data$heard$meth = indication$heard$meth
        STORE (even != 0):ind1$data$heard$v = indication$heard$v
        STORE ((even != 0) ^ 1):ind0$tag = 1
        STORE ((even != 0) ^ 1):ind0$data$heard$meth = indication$heard$meth
        STORE ((even != 0) ^ 1):ind0$data$heard$v = indication$heard$v
        METAREAD even (even != 0) ^ 1
        STORE :ind_busy = 1
        METAREAD even 
        STORE :even = (even != 0) ^ 1
    )
    METHOD indication$heard__RDY INTEGER_1 = ((ind_busy != 0) ^ 1) (
        METAREAD ind_busy 
    )
    METHOD/Rule output_rulee__ENA (
        STORE :ind_busy = 0
        METAREAD ind0 
        METAINVOKE pipe$enq__ENA 
        CALL/Action :pipe$enq__ENA{ind0}
    )
    METHOD/Rule output_rulee__RDY INTEGER_1 = ((((ind_busy != 0) & (even != 0)) != 0) & pipe$enq__RDY) (
        METAREAD ind_busy 
        METAREAD even 
        METAINVOKE pipe$enq__RDY 
    )
    METHOD/Rule output_ruleo__ENA (
        STORE :ind_busy = 0
        METAREAD ind1 
        METAINVOKE pipe$enq__ENA 
        CALL/Action :pipe$enq__ENA{ind1}
    )
    METHOD/Rule output_ruleo__RDY INTEGER_1 = ((((ind_busy != 0) & (even == 0)) != 0) & pipe$enq__RDY) (
        METAREAD ind_busy 
        METAREAD even 
        METAINVOKE pipe$enq__RDY 
    )
)
MODULE l_module_OC_EchoRequestInput 0 (
    FIELD pipe l_ainterface_OC_PipeIn
    OUTCALL request = l_ainterface_OC_EchoRequest
    FIELD/Ptr request l_ainterface_OC_EchoRequest
    METHOD pipe$enq__ENA (
        PARAM v l_struct_OC_EchoRequest_data
        STORE/Alloca :v_2e_addr = pipe$enq$v
        METAREAD v_2e_addr$data$say$meth v_2e_addrfoosuff$tag == 1
        METAREAD v_2e_addr$data$say$v v_2e_addrfoosuff$tag == 1
        METAINVOKE request$say__ENA v_2e_addrfoosuff$tag == 1
        CALL/Action (v_2e_addrfoosuff$tag == 1):request$say__ENA{v_2e_addr$data$say$meth,v_2e_addr$data$say$v}
        METAREAD v_2e_addr$data$say2$meth v_2e_addrfoosuff13$tag == 2
        METAREAD v_2e_addr$data$say2$v v_2e_addrfoosuff13$tag == 2
        METAINVOKE request$say2__ENA v_2e_addrfoosuff13$tag == 2
        CALL/Action (v_2e_addrfoosuff13$tag == 2):request$say2__ENA{v_2e_addr$data$say2$meth,v_2e_addr$data$say2$v}
    )
    METHOD pipe$enq__RDY INTEGER_1 = ((request$say__RDY | ((v_2e_addrfoosufffoosuff$tag == 1) ^ 1)) & (request$say2__RDY | ((v_2e_addrfoosuff13foosuff$tag == 2) ^ 1))) (
        METAINVOKE request$say__RDY 
        METAINVOKE request$say2__RDY 
    )
)
MODULE l_module_OC_EchoRequestOutput 0 (
    FIELD request l_ainterface_OC_EchoRequest
    OUTCALL pipe = l_ainterface_OC_PipeIn
    FIELD/Ptr pipe l_ainterface_OC_PipeIn
    METHOD request$say2__ENA (
        PARAM meth INTEGER_32
        PARAM v INTEGER_32
        STORE/Alloca :ind$tag = 2
        STORE :ind$data$say2$meth = request$say2$meth
        STORE :ind$data$say2$v = request$say2$v
        METAINVOKE pipe$enq__ENA 
        CALL/Action :pipe$enq__ENA{ind}
    )
    METHOD request$say2__RDY INTEGER_1 = (pipe$enq__RDY) (
        METAINVOKE pipe$enq__RDY 
    )
    METHOD request$say__ENA (
        PARAM meth INTEGER_32
        PARAM v INTEGER_32
        STORE/Alloca :ind$tag = 1
        STORE :ind$data$say$meth = request$say$meth
        STORE :ind$data$say$v = request$say$v
        METAINVOKE pipe$enq__ENA 
        CALL/Action :pipe$enq__ENA{ind}
    )
    METHOD request$say__RDY INTEGER_1 = (pipe$enq__RDY) (
        METAINVOKE pipe$enq__RDY 
    )
)
MODULE l_module_OC_Connect 608 (
    INTERFACECONNECT lERI$request lEcho$request l_ainterface_OC_EchoRequest
    INTERFACECONNECT lEIO$pipe lEII_test$pipe l_ainterface_OC_PipeIn_OC_0
    INTERFACECONNECT lEcho$indication lEIO$indication l_ainterface_OC_EchoIndication
    INTERFACECONNECT lERO_test$pipe lERI$pipe l_ainterface_OC_PipeIn
    INTERFACECONNECT lEII_test$indication indication l_ainterface_OC_EchoIndication
    FIELD lEIO l_module_OC_EchoIndicationOutput
    FIELD lERI l_module_OC_EchoRequestInput
    FIELD lEcho l_module_OC_Echo
    FIELD lERO_test l_module_OC_EchoRequestOutput
    FIELD lEII_test l_module_OC_EchoIndicationInput
    METHOD/Rule swap2_rule__ENA (
        METAINVOKE lEcho$swap$y2xnull__ENA 
        CALL/Action :lEcho$swap$y2xnull__ENA{}
    )
    METHOD/Rule swap2_rule__RDY INTEGER_1 = (lEcho$swap$y2xnull__RDY) (
        METAINVOKE lEcho$swap$y2xnull__RDY 
    )
    METHOD/Rule swap_rule__ENA (
        METAINVOKE lEcho$swap$x2y__ENA 
        CALL/Action :lEcho$swap$x2y__ENA{}
        METAINVOKE lEcho$swap$y2x__ENA 
        CALL/Action :lEcho$swap$y2x__ENA{}
    )
    METHOD/Rule swap_rule__RDY INTEGER_1 = (lEcho$swap$x2y__RDY & lEcho$swap$y2x__RDY) (
        METAINVOKE lEcho$swap$x2y__RDY 
        METAINVOKE lEcho$swap$y2x__RDY 
    )
)
