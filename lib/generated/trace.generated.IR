STRUCT NOCDataH  {
    FILE atomicc_OC_h
    FIELD Bit(16) length
    FIELD Bit(128) data
}
INTERFACE BRAMIfc(width=64,depth=1024)  {
    FILE bram_OC_h
    METHOD/Action write__ENA ( Bit(__builtin_clog2(depth)) addr , Bit(width) data )
    METHOD/Action read__ENA ( Bit(__builtin_clog2(depth)) addr )
    METHOD dataOut Bit(width)
}
INTERFACE BscanIfc(width=64)  {
    FILE bscan_OC_h
    INTERFACE PipeIn(width=64) toBscan
    INTERFACE/Ptr PipeIn(width=64) fromBscan
}
INTERFACE PipeIn(width=32)  {
    FILE atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(width) v )
}
INTERFACE TraceIfc(width=64,depth=1024)  {
    FILE trace_OC_h
    FIELD/input Bit(1) CLK
    FIELD/input Bit(1) nRST
    FIELD/input Bit(1) enable
    FIELD/input Bit(64) data
}
EMODULE BRAM(width=64,depth=1024) BRAMIfc(width=64,depth=1024) {
    FILE bram_OC_h
}
EMODULE Bscan(id=3,width=64) BscanIfc(width=64) {
    FILE bscan_OC_h
}
EMODULE Dummy PipeIn(width=32) {
    FILE atomicc_OC_h
}
MODULE Trace(width=64,depth=1024) TraceIfc(width=64,depth=1024) {
    FILE trace_OC_cpp
    INTERFACECONNECT readUser bscan$fromBscan PipeIn(width=64)
    FIELD Bit(32) timestamp
    FIELD Bit(64) buffer
    FIELD BRAM(width=64,depth=1024) bram
    FIELD Bit(11) addr
    FIELD Bit(11) readAddr
    FIELD Bscan(id=3,width=64) bscan
    FIELD Bit(1) waitRead
    INTERFACE PipeIn(width=64) readUser
    METHOD/Action readUser$enq__ENA ( Bit(64) v )
    METHOD/Rule/Action RULE$copyRule__ENA if ((((enable) != (0)) && ((buffer) != (data)))) {
        CALL/Action :bram$write__ENA{addr,__bitconcat{timestamp,__bitsubstr{data,(64) - (32),0}}}
        STORE :addr = (addr) + (1)
        STORE :buffer = data
    }
    METHOD/Rule/Action RULE$copyBRule__ENA if (((waitRead) ^ (1))) {
        CALL/Action :bram$read__ENA{readAddr}
        STORE :waitRead = 1
        STORE :readAddr = (readAddr) + (1)
    }
    METHOD/Rule/Action RULE$callBack__ENA if ((waitRead)) {
        CALL :bram$dataOut{}
        CALL/Action :bscan$toBscan$enq__ENA{bram$dataOut}
        STORE :waitRead = 0
    }
    METHOD/Rule/Action RULE$init__ENA {
        STORE :timestamp = (timestamp) + (1)
    }
}
