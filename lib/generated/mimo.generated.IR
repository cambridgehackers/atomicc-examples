STRUCT NOCDataH  {
    FIELD Bit(16) length
    FIELD Bit(128) data
}
INTERFACE FunnelBaseIfc(funnelWidth=99,dataWidth=32)  {
    INTERFACE/Count funnelWidth  PipeIn_OC_0 in
    INTERFACE/Ptr PipeIn_OC_1 out
}
INTERFACE Gear  {
    INTERFACE PipeIn_OC_2 in
    INTERFACE PipeOut out
}
INTERFACE Gear_OC_3  {
    INTERFACE PipeIn_OC_4 in
    INTERFACE PipeOut_OC_5 out
}
INTERFACE PipeIn  {
    METHOD/Action enq__ENA ( NOCDataH v )
}
INTERFACE PipeIn_OC_0  {
    METHOD/Action enq__ENA ( Bit(32) v )
}
INTERFACE PipeIn_OC_1  {
    METHOD/Action enq__ENA ( Bit(32) v )
}
INTERFACE PipeIn_OC_2  {
    METHOD/Action enq__ENA ( Bit(32) v )
}
INTERFACE PipeIn_OC_4  {
    METHOD/Action enq__ENA ( Bit(32) v )
}
INTERFACE PipeOut  {
    METHOD/Action deq__ENA
    METHOD first Bit(128)
}
INTERFACE PipeOut_OC_5  {
    METHOD/Action deq__ENA
    METHOD first Bit(128)
}
INTERFACE l_topIfc  {
    INTERFACE PipeIn request
    INTERFACE/Ptr PipeIn indication
}
EMODULE FunnelBufferedBase(funnelWidth=99,dataWidth=32) FunnelBaseIfc(funnelWidth=99,dataWidth=32) {
}
EMODULE l_top l_topIfc {
}
MODULE MIMO Gear {
    FIELD MIMOBase(widthIn=32,widthOut=128) gear
    METHOD/Action in$enq__ENA ( Bit(32) v ) {
        CALL/Action :gear$in$enq__ENA{in$enq$v}
    }
    METHOD/Action out$deq__ENA {
        CALL/Action :gear$out$deq__ENA{}
    }
    METHOD out$first Bit(128) = ((gear$out$first)) {
        CALL :gear$out$first{}
    }
}
MODULE MIMOBase(widthIn=32,widthOut=128) Gear_OC_3 {
    FIELD Bit((128 + 32)) buffer
    FIELD Bit((__builtin_clog2((128 + 32)) + 1)) c
    FIELD/shared Bit(32) m
    METHOD/Action out$deq__ENA if (((c) >= (128))) {
        STORE :buffer = __bitsubstr{buffer,((128) + (32)) - (1),128}
        STORE :c = (c) - (128)
    }
    METHOD out$first Bit(widthOut) = ((buffer)) if (((c) >= (128)))
    METHOD/Action in$enq__ENA ( Bit(widthIn) v ) if ((((c) >= (128)) ^ (1))) {
        LET Bit(32) :m = in$enq$v
        GENERATE :__inst$Genvar1,(0),((__inst$Genvar1 < widthOut)),((__inst$Genvar1 + 1)),FOR$0Body__ENA
        STORE :c = (c) + (32)
    }
    METHOD/Action FOR$0Body__ENA ( Bit(32) __inst$Genvar1 ) {
        STORE (((128) - (__inst$Genvar1)) == (c)):__bitsubstr{buffer,((__inst$Genvar1) + (32)) - (1),__inst$Genvar1} = m
    }
}
