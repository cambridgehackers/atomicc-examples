STRUCT NOCDataH  {
    FILE atomicc_OC_h
    FIELD Bit(16) length
    FIELD Bit(128) data
}
INTERFACE AfB(owidth=32,width=144)  {
    FILE adapter_OC_h
    INTERFACE PipeInLast(width=32) in
    INTERFACE/Ptr PipeIn(width=144) out
}
INTERFACE AsyncControlIfc  {
    FILE atomicc_OC_h
    FIELD/input Bit(1) CLK
    FIELD/input Bit(1) nRST
    FIELD/input Bit(1) start
    FIELD/input Bit(1) end
    FIELD/input Bit(1) clear
    FIELD/output Bit(1) out
    FIELD/output Bit(1) done
}
INTERFACE AtB(width=128,owidth=32)  {
    FILE adapter_OC_h
    INTERFACE PipeInLength(width=128) in
    INTERFACE PipeOutLast(width=32) out
    METHOD/Action clear__ENA
}
INTERFACE FunnelBaseIfc(funnelWidth=99,width=32)  {
    FILE funnel_OC_h
    INTERFACE/Count funnelWidth  PipeIn(width=32) in
    INTERFACE/Ptr PipeIn(width=32) out
}
INTERFACE Out2InLastIfc(width=32)  {
    FILE out2in_OC_h
    INTERFACE/Ptr PipeOutLast(width=32) in
    INTERFACE/Ptr PipeInLast(width=32) out
}
INTERFACE PipeIn(width=32)  {
    FILE atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(width) v )
}
INTERFACE PipeInLast(width=32)  {
    FILE atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(width) v , Bit(1) last )
}
INTERFACE PipeInLength(width=128)  {
    FILE atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(width) v , Bit(16) size )
}
INTERFACE PipeOutLast(width=32)  {
    FILE atomicc_OC_h
    METHOD/Action deq__ENA
    METHOD first Bit(width)
    METHOD last Bit(1)
}
INTERFACE SelectIndexIfc(funnelWidth=20,width=14)  {
    FILE atomicc_OC_h
    FIELD Bit(14) out
    FIELD/Ptr/Count funnelWidth  Bit(14) in
    FIELD Bit(5) index
}
INTERFACE UserTopIfc  {
    FILE userTop_OC_h
    INTERFACE PipeInLast(width=32) write
    INTERFACE/Ptr PipeInLast(width=32) read
}
INTERFACE l_topIfc  {
    FILE userTop_OC_h
    INTERFACE PipeIn(width=144) request
    INTERFACE/Ptr PipeIn(width=144) indication
}
EMODULE AdapterFromBus(owidth=32,width=144) AfB(owidth=32,width=144) {
    FILE adapter_OC_h
}
EMODULE AdapterToBus(width=128,owidth=32) AtB(width=128,owidth=32) {
    FILE adapter_OC_h
}
EMODULE AsyncControl AsyncControlIfc {
    FILE atomicc_OC_h
}
EMODULE Dummy PipeIn(width=32) {
    FILE atomicc_OC_h
}
EMODULE FunnelBufferedBase(funnelWidth=99,width=32) FunnelBaseIfc(funnelWidth=99,width=32) {
    FILE funnel_OC_h
}
EMODULE Out2InLast(width=32) Out2InLastIfc(width=32) {
    FILE out2in_OC_h
}
EMODULE/Verilog SelectIndex(funnelWidth=20,width=14) SelectIndexIfc(funnelWidth=20,width=14) {
    FILE atomicc_OC_h
}
EMODULE UserTop UserTopIfc {
    FILE userTop_OC_h
}
EMODULE l_top l_topIfc {
    FILE userTop_OC_h
}
MODULE UserTop UserTopIfc {
    FILE userTop_OC_cpp
    INTERFACECONNECT wadapter_0$in write PipeInLast(width=32)
    INTERFACECONNECT out2$in radapter_0$out PipeOutLast(width=32)
    INTERFACECONNECT read out2$out PipeInLast(width=32)
    INTERFACECONNECT wad wadapter_0$out PipeIn(width=144)
    INTERFACECONNECT indication ctop$indication PipeIn(width=144)
    FIELD AdapterToBus(width=128,owidth=32) radapter_0
    FIELD Out2InLast(width=32) out2
    FIELD AdapterFromBus(owidth=32,width=144) wadapter_0
    FIELD l_top ctop
    INTERFACE PipeIn(width=144) wad
    INTERFACE PipeIn(width=144) indication
    METHOD/Action wad$enq__ENA ( NOCDataH v ) {
        ALLOCA NOCDataH _wad$enq$temp$v
        LET NOCDataH :_wad$enq$temp$v = wad$enq$v
        PRINTF :printf{"reqConnect.enq v %x length %x\n",_wad$enq$temp$v.data,_wad$enq$temp$v.length}
        CALL/Action :ctop$request$enq__ENA{wad$enq$v}
    }
    METHOD/Action indication$enq__ENA ( NOCDataH v ) {
        ALLOCA NOCDataH _indication$enq$temp$v
        LET NOCDataH :_indication$enq$temp$v = indication$enq$v
        PRINTF :printf{"indConnect.enq v %x length %x\n",_indication$enq$temp$v.data,_indication$enq$temp$v.length}
        CALL/Action :radapter_0$in$enq__ENA{_indication$enq$temp$v.data,_indication$enq$temp$v.length}
    }
}
