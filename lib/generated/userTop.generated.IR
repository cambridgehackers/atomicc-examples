EMODULE l_struct_OC_NOCData {
    FIELD/Count 4  INTEGER_32 data
}
EMODULE l_ainterface_OC_PipeIn {
    METHOD enq__ENA ( l_struct_OC_NOCData v )
}
EMODULE l_ainterface_OC_PipeInB {
    METHOD enq__ENA ( INTEGER_32 v , INTEGER_16 length )
}
EMODULE l_ainterface_OC_PipeInH {
    METHOD enq__ENA ( l_struct_OC_NOCData v , INTEGER_16 length )
}
EMODULE AdapterFromBus {
    INTERFACE l_ainterface_OC_PipeInB in
    INTERFACE/Ptr l_ainterface_OC_PipeInH out
}
EMODULE AdapterToBus {
    INTERFACE l_ainterface_OC_PipeInH in
    INTERFACE/Ptr l_ainterface_OC_PipeInB out
}
EMODULE UserTop {
    INTERFACE l_ainterface_OC_PipeInB write
    INTERFACE/Ptr l_ainterface_OC_PipeInB read
}
EMODULE l_top {
    INTERFACE l_ainterface_OC_PipeIn request
    INTERFACE/Ptr l_ainterface_OC_PipeIn indication
}
MODULE UserTop {
    INTERFACECONNECT ctop$indication indication l_ainterface_OC_PipeIn
    INTERFACECONNECT wadapter_0$out wad l_ainterface_OC_PipeInH
    INTERFACECONNECT/Forward write wadapter_0$in l_ainterface_OC_PipeInB
    INTERFACECONNECT/Forward read radapter_0$out l_ainterface_OC_PipeInB
    FIELD AdapterToBus radapter_0
    FIELD AdapterFromBus wadapter_0
    INTERFACE l_ainterface_OC_PipeInB write
    INTERFACE/Ptr l_ainterface_OC_PipeInB read
    INTERFACE l_ainterface_OC_PipeInH wad
    INTERFACE l_ainterface_OC_PipeIn indication
    FIELD l_top ctop
    METHOD indication$enq__ENA ( l_struct_OC_NOCData v ) {
        ALLOCA l_struct_OC_NOCData indication$enq__ENA$agg_2e_tmp
        ALLOCA INTEGER_16 indication$enq__ENA$len
        ALLOCA INTEGER_16 indication$enq__ENA$port
        ALLOCA INTEGER_128 indication$enq__ENA$vint
        LET INTEGER_128 :indication$enq__ENA$vint = indication$enq$v
        LET INTEGER_16 :indication$enq__ENA$len = (__bitsubstr{indication$enq__ENA$vint,15,0}) - (1)
        LET INTEGER_16 :indication$enq__ENA$port = 5
        PRINTF :printf{"indConnect.enq v %llx len %lx\n",indication$enq$v,indication$enq__ENA$len}
        LET INTEGER_32 :indication$enq__ENA$agg_2e_tmp = __bitconcat{__bitsubstr{indication$enq__ENA$vint,127,16},indication$enq__ENA$port}
        CALL/Action :radapter_0$in$enq__ENA{indication$enq__ENA$agg_2e_tmp,indication$enq__ENA$len}
    }
    METHOD wad$enq__ENA ( l_struct_OC_NOCData v , INTEGER_16 length ) {
        PRINTF :printf{"reqConnect.enq v %llx length %lx\n",wad$enq$v,wad$enq$length}
        CALL/Action :ctop$request$enq__ENA{wad$enq$v}
    }
}
