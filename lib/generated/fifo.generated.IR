STRUCT NOCDataH  {
    FILE atomicc_OC_h
    FIELD Bit(16) length
    FIELD Bit(128) data
}
INTERFACE Fifo(width=999999)  {
    FILE fifo_OC_h
    INTERFACE PipeIn(width=999999) in
    INTERFACE PipeOut(width=999999) out
}
INTERFACE FifoPIfc(width=999999)  {
    FILE fifo_OC_h
    INTERFACE PipeIn(width=999999) in
    INTERFACE/Ptr PipeIn(width=999999) out
}
INTERFACE Out2InIfc(width=999999)  {
    FILE out2in_OC_h
    INTERFACE/Ptr PipeOut(width=999999) in
    INTERFACE/Ptr PipeIn(width=999999) out
}
INTERFACE PipeIn(width=32)  {
    FILE atomicc_OC_h
    METHOD/Action enq__ENA ( Bit(width) v )
}
INTERFACE PipeOut(width=999999)  {
    FILE atomicc_OC_h
    METHOD/Action deq__ENA
    METHOD first Bit(width)
}
INTERFACE SelectIndexIfc(funnelWidth=20,width=14)  {
    FILE atomicc_OC_h
    FIELD Bit(14) out
    FIELD/Ptr/Count funnelWidth  Bit(14) in
    FIELD Bit(5) index
}
EMODULE Dummy PipeIn(width=32) {
    FILE atomicc_OC_h
}
EMODULE Out2InBase(width=999999) Out2InIfc(width=999999) {
    FILE out2in_OC_h
}
EMODULE/Verilog SelectIndex(funnelWidth=20,width=14) SelectIndexIfc(funnelWidth=20,width=14) {
    FILE atomicc_OC_h
}
MODULE Fifo1Base(width=999999) Fifo(width=999999) {
    FILE fifo_OC_cpp
    FIELD Bit(999999) element
    FIELD Bit(1) full
    METHOD/Action in$enq__ENA ( Bit(width) v ) if (((full) ^ (1))) {
        STORE :element = in$enq$v
        STORE :full = 1
    }
    METHOD/Action out$deq__ENA if ((full)) {
        STORE :full = 0
    }
    METHOD out$first Bit(width) = ((element)) if ((full))
}
MODULE FifoB1Base(width=999999) Fifo(width=999999) {
    FILE fifo_OC_cpp
    FIELD Bit(999999) element
    FIELD Bit(1) full
    FIELD/shared Bit(999999) enq_v
    METHOD/Action in$enq__ENA ( Bit(width) v ) if (((full) ^ (1))) {
        LET Bit(999999) :enq_v = in$enq$v
        STORE :element = in$enq$v
        STORE !((out$deq__ENA) != (0)):full = 1
    }
    METHOD/Action out$deq__ENA if (((((full) | (in$enq__ENA)) | (in$enq__ENA)) != (0))) {
        STORE :full = 0
    }
    METHOD out$first Bit(width) = ((__phi((full):(element), !(full):(enq_v)))) if (((full) | (in$enq__ENA)))
}
MODULE FifoPBase(width=999999) FifoPIfc(width=999999) {
    FILE fifo_OC_cpp
    INTERFACECONNECT base$in fifo$out PipeOut(width=999999)
    INTERFACECONNECT base$out out PipeIn(width=999999)
    FIELD Fifo1Base(width=999999) fifo
    FIELD Out2InBase(width=999999) base
    METHOD/Action in$enq__ENA ( Bit(width) v ) {
        CALL/Action :fifo$in$enq__ENA{in$enq$v}
    }
}
MODULE FifoPipe1Base(width=999999) Fifo(width=999999) {
    FILE fifo_OC_cpp
    FIELD Bit(999999) element
    FIELD Bit(1) full
    METHOD/Action in$enq__ENA ( Bit(width) v ) if (((((full) ^ (1)) | (out$deq__ENA)) != (0))) {
        STORE :element = in$enq$v
        STORE !((out$deq__ENA) != (0)):full = 1
    }
    METHOD/Action out$deq__ENA if ((full)) {
        STORE :full = ((in$enq__ENA) != (0)) ^ (1)
    }
    METHOD out$first Bit(width) = ((element)) if ((full))
}
