STRUCT NOCDataH  {
    FIELD Bit(16) length
    FIELD Bit(128) data
}
INTERFACE FunnelBaseIfc(funnelWidth=99,dataWidth=32)  {
    INTERFACE/Count funnelWidth  PipeIn_OC_0 in
    INTERFACE/Ptr PipeIn_OC_1 out
}
INTERFACE PipeIn  {
    METHOD/Action enq__ENA ( NOCDataH v )
}
INTERFACE PipeInB(width=32)  {
    METHOD/Action enq__ENA ( Bit(width) v , Bit(1) last )
}
INTERFACE PipeInBP(width=32)  {
    INTERFACE/Ptr PipeInB(width=32) _
}
INTERFACE PipeIn_OC_0  {
    METHOD/Action enq__ENA ( Bit(32) v )
}
INTERFACE PipeIn_OC_1  {
    METHOD/Action enq__ENA ( Bit(32) v )
}
INTERFACE UserTopIfc  {
    INTERFACE PipeInB(width=32) write
    INTERFACE/Ptr PipeInB(width=32) read
}
INTERFACE VsimInterface  {
    FIELD/input Bit(1) CLK
    FIELD/input Bit(1) nRST
    FIELD/input Bit(1) CLK_derivedClock
    FIELD/input Bit(1) nRST_derivedReset
    FIELD/input Bit(1) CLK_sys_clk
}
INTERFACE l_topIfc  {
    INTERFACE PipeIn request
    INTERFACE/Ptr PipeIn indication
}
EMODULE FunnelBufferedBase(funnelWidth=99,dataWidth=32) FunnelBaseIfc(funnelWidth=99,dataWidth=32) {
}
EMODULE UserTop UserTopIfc {
}
EMODULE VsimReceive(width=32) PipeInBP(width=32) {
}
EMODULE VsimSend(width=32) PipeInB(width=32) {
}
EMODULE l_top l_topIfc {
}
MODULE VsimTop VsimInterface {
    INTERFACECONNECT sink_0$_ user$write PipeInB(width=32)
    INTERFACECONNECT user$read source_0 PipeInB(width=32)
    FIELD UserTop user
    FIELD VsimReceive(width=32) sink_0
    FIELD VsimSend(width=32) source_0
}
